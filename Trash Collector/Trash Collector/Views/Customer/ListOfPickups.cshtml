@model Trash_Collector.Models.FilterViewModel

@{
    ViewBag.Title = "ListOfPickups";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.WeekDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(model => model.WeekDay, Model.DaysOfTheWeek)
                @Html.ValidationMessageFor(model => model.WeekDay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<h2>List of Pickups</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Customers[0].FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Customers[0].LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Customers[0].StreetAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Customers[0].City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Customers[0].State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Customers[0].ZipCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Customers[0].PickUpDay)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Customers[0].ExtraPickUpDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Customers[0].Balance)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Customers[0].SuspendedStart)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Customers[0].SuspectedEnd)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Customers[0].PickupConfirmation)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Customers)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StreetAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ZipCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PickUpDay)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExtraPickUpDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Balance)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SuspendedStart)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SuspectedEnd)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PickupConfirmation)
            </td>

            <td>
                @Html.ActionLink("Edit Pickup", "CreatePickup", new { id = item.CustomerId }) |
                @Html.ActionLink("Details", "Details", new { id = item.CustomerId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.CustomerId })
            </td>
        </tr>
    }

</table>
